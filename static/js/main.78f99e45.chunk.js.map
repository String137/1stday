{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","pwInput","React","createRef","className","name","ref","placeholder","type","id","onClick","params","curVal","current","value","str","i","hash","length","charCodeAt","stringHash","encoded","key","out","j","String","fromCharCode","encode","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKA4DeA,MA1Df,WAqCE,IAAIC,EAAUC,IAAMC,YAEpB,OACE,sBAAKC,UAAU,MAAf,UACI,qBAAKA,UAAU,QAIf,qBAAKA,UAAU,SAAf,SACA,iCACA,uBAAOC,KAAK,MAAMC,IAAKL,EAASM,YAAY,qDAAaH,UAAU,WAAWI,KAAK,aACjF,wBAAQC,GAAG,SAASL,UAAU,SAASM,QAxB/C,SAAcC,GACZ,IACIC,EAASX,EAAQY,QAAQC,MAE7B,GAHqB,QAvBvB,SAAoBC,GAClB,IAAcC,EAAVC,EAAO,EACX,GAAmB,IAAfF,EAAIG,OAAc,OAAOD,EAC7B,IAAKD,EAAI,EAAGA,EAAID,EAAIG,OAAQF,IAE1BC,GAAUA,GAAQ,GAAKA,EADfF,EAAII,WAAWH,GAEvBC,GAAQ,EAEZ,OAAOA,EAiBcG,CAAWR,GACI,CAChC,IAAMS,EAhBV,SAAgBC,GAGd,IAFA,IAAMP,EAAM,YACRQ,EAAM,GACDP,EAAE,EAAGA,EAAED,EAAIG,OAAQF,IAAI,CAC9B,IAAIQ,EAAIR,EAAIM,EAAIJ,OAChBK,GAAOE,OAAOC,aAAaX,EAAII,WAAWH,GAAGM,EAAIH,WAAWK,GAAG,IAEjE,OAAOD,EASWI,CAAOf,GACvBgB,MAAM,6BAAWP,EAAU,qDAG3BO,MAAM,sDAER,OAAO,cCzBIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.78f99e45.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react'\nfunction App() {\n\n  function stringHash(str) {\n    var hash = 0, i, chr;\n    if (str.length === 0) return hash;\n    for (i = 0; i < str.length; i++) {\n      chr   = str.charCodeAt(i);\n      hash  = ((hash << 5) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n  return hash;\n  }\n  \n  function encode(key) {\n    const str = \">pt_ot]lt\";\n    var out = \"\";\n    for (let i=0; i<str.length; i++){\n      let j = i % key.length;\n      out += String.fromCharCode(str.charCodeAt(i)+key.charCodeAt(j)-50);\n    }\n    return out;\n  }\n\n \n  function pass(params) {\n    const hashedAnswer = 51665;\n    var curVal = pwInput.current.value;\n    var hashedCurVal = stringHash(curVal)\n    if (hashedAnswer === hashedCurVal){\n      const encoded = encode(curVal)\n      alert('줌 링크가 ' + encoded + '로 바뀌었습니다.');\n    }\n    else{\n      alert(\"암호가 틀렸습니다.\");\n    }\n    return false;\n  }\n  let pwInput = React.createRef();\n\n  return (\n    <div className=\"App\">\n        <div className=\"top\">\n          \n        </div>\n        \n        <div className=\"window\">\n        <form>\n        <input name=\"box\" ref={pwInput} placeholder=\"암호를 입력하세요.\" className=\"password\" type=\"password\"/>\n          <button id=\"button\" className=\"button\" onClick={pass}></button>\n        </form>\n        \n        </div>\n        \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}